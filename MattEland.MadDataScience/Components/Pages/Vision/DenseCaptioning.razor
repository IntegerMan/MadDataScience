@page "/Vision/DenseCaptioning"
@rendermode InteractiveServer
@inject VisionService VisionService
@inject ILogger<DenseCaptioning> Logger

<MudContainer MaxWidth="MaxWidth.Medium" Class="mx-auto my-8">
<MudText Typo="Typo.h4">Dense Captioning</MudText>
<MudText Typo="Typo.subtitle1" Class="mb-8">
    Detect and describe objects inside of an image
</MudText>

<div style="position: relative; display: inline-block;">
    <img src="@ImageSource" alt="Sample Image" class="img-fluid" />
    @if (Objects.Any())
    {
        @foreach (var obj in Objects)
        {
            <div style="position: absolute; border: 2px solid red; 
                        top: @(obj.BoundingBox.Y)px; 
                        left: @(obj.BoundingBox.X)px; 
                        width: @(obj.BoundingBox.Width)px; 
                        height: @(obj.BoundingBox.Height)px;"
                 title="@obj.Name">
            </div>
        }
    }
</div>

<br />
<MudButton Disabled="IsBusy" Class="mt-8 mb-4" @onclick="HandleCaptionClick" Variant="Variant.Filled" Color="Color.Primary">
    Detect Objects
</MudButton>

<br />
@if (IsBusy)
{
    <MudProgressLinear class="mt-4" Indeterminate="true" Color="Color.Primary"/>
}

@if (Objects.Any())
{
    <MudText Typo="Typo.h6">Objects Detected</MudText>
    <ul>
        @foreach (var obj in Objects)
        {
            <li>@obj (@obj.BoundingBox.X , @obj.BoundingBox.Y, @obj.BoundingBox.Width, @obj.BoundingBox.Height)</li>
        }
    </ul>
}
</MudContainer>

@code {
    public string ImageSource => "CodeMash.jpg";
    List<ObjectDetectionResult> Objects { get; set; } = new();
    public bool IsBusy { get; set; }

    private async Task HandleCaptionClick()
    {
        BinaryData data = await VisionService.LoadImageDataAsync(ImageSource);
        
        Logger.LogDebug("Dense Captioning Image {Image}", ImageSource);
        
        IsBusy = true;
        StateHasChanged();
        
        Objects = await VisionService.CaptionObjectsAsync(data);
        IsBusy = false;
    }
}